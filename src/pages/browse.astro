---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import TermCard from "../components/TermCard.astro";

// Fetch all terms and sort alphabetically
const allTerms = await getCollection("terms");
const sortedTerms = allTerms.sort((a, b) => 
  a.data.title.localeCompare(b.data.title)
);

// Get unique tags from all terms
const allTags = [...new Set(
  allTerms.flatMap(term => term.data.tags || [])
)].sort();
---

<Layout title="Browse All Terms - Eli5Dev">
  <main class="container mx-auto px-4 py-8">
    <div class="max-w-6xl mx-auto">
      <div class="mb-8">
        <a href="/" class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline mb-4 group">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1 transform transition-transform group-hover:-translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to Home
        </a>
        <h1 class="text-3xl md:text-4xl font-bold mb-2 text-gray-900 dark:text-white">Browse All Terms</h1>
        <p class="text-lg text-gray-600 dark:text-gray-400">Explore all of our simplified explanations.</p>
      </div>

      <!-- Filter dropdown -->
      <div class="mb-8">
        <div class="relative">
          <select id="tagFilter" class="appearance-none bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-2 pr-8 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
            <option value="">All Terms</option>
            {allTags.map(tag => (
              <option value={tag}>{tag}</option>
            ))}
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 dark:text-gray-300">
            <svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
              <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/>
            </svg>
          </div>
        </div>
      </div>

      <!-- Terms grid -->
      <div id="termsGrid" class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {sortedTerms.map((term) => (
          <div class="term-card" data-tags={JSON.stringify(term.data.tags || [])}>
            <TermCard
              title={term.data.title}
              description={term.data.description}
              slug={term.slug}
              tags={term.data.tags || []}
            />
          </div>
        ))}
      </div>
    </div>
  </main>
</Layout>

<script>
  const tagFilter = document.getElementById('tagFilter') as HTMLSelectElement;
  const termCards = document.querySelectorAll<HTMLElement>('.term-card');

  tagFilter?.addEventListener('change', (e) => {
    const selectedTag = (e.target as HTMLSelectElement).value;
    
    termCards.forEach(card => {
      const cardTags = JSON.parse(card.dataset.tags || '[]');
      if (!selectedTag || cardTags.includes(selectedTag)) {
        card.style.display = 'block';
      } else {
        card.style.display = 'none';
      }
    });
  });
</script> 